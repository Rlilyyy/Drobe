# 强制跳转HTTPS
server {
  listen 80;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  server_name ~^(.*).libinhong.com$;
  set $sub_name $1;
  return 301 https://$sub_name.libinhong.com$request_uri;
}

server {
  listen 443 ssl http2 reuseport;
  # 公钥证书路径
  ssl_certificate /home/cert/blog/blog.libinhong.com.crt;
  ssl_certificate_key /home/cert/blog/blog.libinhong.com.key;
  # TLS允许版本
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  # 允许使用的加密算法
  ssl_ciphers "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA";
  # 优先使用服务器加密算法
  ssl_prefer_server_ciphers on;
  # 设置ssl/tls会话缓存的类型和大小
  ssl_session_cache          shared:SSL:50m;
  # 缓存会话过期时间
  ssl_session_timeout        1d;
  # 开启OCSP stapling（在TLS握手阶段提前验证证书）
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate /home/cert/blog/chain.pem;
  # session复用
  ssl_session_tickets        on;
  # 保证交换秘钥过程安全
  ssl_dhparam /home/cert/dhparam.pem;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  server_name
    blog1.libinhong.com
    blog.libinhong.com;
  location / {
    proxy_pass http://127.0.0.1:3000;
  }

  location /favicon.ico {
    default_type image/x-icon;
    root /home/libinhong/www/public/;
  }
  # server_name blog.libinhong.com;
  # root /root/workspace/Drobe/dist;
  # location / {
  #       index index.html;
  # }
}
